//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/InputSystem/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Deltas"",
            ""id"": ""ef825098-c254-438f-ac58-6e09619bafa8"",
            ""actions"": [],
            ""bindings"": []
        },
        {
            ""name"": ""Positions"",
            ""id"": ""09ba5d0c-dc40-452e-a0a6-c3f583368eab"",
            ""actions"": [
                {
                    ""name"": ""PointerVector2"",
                    ""type"": ""Value"",
                    ""id"": ""87120380-0498-4676-b1e9-f9ac48da7105"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryStartPosition"",
                    ""type"": ""Value"",
                    ""id"": ""78deee43-1bd4-46f3-b686-460bd0c46f8b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""InputDirection"",
                    ""type"": ""Value"",
                    ""id"": ""5cc5dfc8-df1f-45c5-8ad2-585d2d07a0fd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2ff274af-24a7-4557-af14-f453384ffbc6"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69dc2f89-4579-43d6-8758-33e598745833"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26bacf36-0fa1-4830-ac7c-90fa6eec556b"",
                    ""path"": ""<Touchscreen>/primaryTouch/startPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryStartPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""663c04d8-3b3b-4420-ab5a-33f8ffe79857"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputDirection"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1a241c05-f87a-4c1e-b7da-eed339189f64"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""064b2f0a-6cef-40d8-9b86-b69ca58cc15b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""012ab012-8282-4e68-8346-43dbdaa3a50b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""39832c6f-a86a-4e6f-9281-95b37b4447b9"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Touchs"",
            ""id"": ""6373d63a-2a21-4355-becd-85aa2899d7e1"",
            ""actions"": [
                {
                    ""name"": ""Primary"",
                    ""type"": ""Value"",
                    ""id"": ""782719ed-0224-44c5-bc38-67b4cc444e37"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""0"",
                    ""type"": ""Value"",
                    ""id"": ""86375945-48d0-4408-aaad-30ed84777adf"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""1"",
                    ""type"": ""Value"",
                    ""id"": ""8b29c4a3-78b6-4d03-b693-fe561b38cdd6"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""2"",
                    ""type"": ""Value"",
                    ""id"": ""0a8cd82f-2082-47d5-b2ad-1186437cbaf1"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""3"",
                    ""type"": ""Value"",
                    ""id"": ""dd922280-fcf0-4f85-8209-cba5d17095dc"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""4"",
                    ""type"": ""Value"",
                    ""id"": ""8ee40547-6e6a-4a9c-945e-d5351bb337eb"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""5"",
                    ""type"": ""Value"",
                    ""id"": ""5aaffc9b-463b-4683-8f0c-c7688ecac302"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""6"",
                    ""type"": ""Value"",
                    ""id"": ""b67ebbe5-2b75-4e2e-9108-4d1cbac09560"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""7"",
                    ""type"": ""Value"",
                    ""id"": ""9d757040-0c80-4215-aca6-6c2b0145a27b"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""8"",
                    ""type"": ""Value"",
                    ""id"": ""b57277a2-8b06-4e24-ba8b-260be05af732"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""9"",
                    ""type"": ""Value"",
                    ""id"": ""b01d3094-7e9b-41df-bb68-c5b5e72570fb"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c3767134-98e4-44b3-89be-22757c5e87f0"",
                    ""path"": ""<Touchscreen>/touch0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2aaa1d1-797a-4538-be3f-6903daa1d04c"",
                    ""path"": ""<Touchscreen>/touch1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""431982ad-8dca-4e47-9b70-956bba8b31b8"",
                    ""path"": ""<Touchscreen>/touch2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""286b4e05-cfb5-4db6-b231-b27de04adc38"",
                    ""path"": ""<Touchscreen>/touch3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""08e23f89-c3b5-4a24-8882-f68e54f4365a"",
                    ""path"": ""<Touchscreen>/touch4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b9d213b-04e2-4a66-a7ee-3798d0281429"",
                    ""path"": ""<Touchscreen>/touch5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1c664f4-4380-4fb5-9470-887652ce3ecf"",
                    ""path"": ""<Touchscreen>/touch6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18014874-451d-42f1-8787-b654ff4d1491"",
                    ""path"": ""<Touchscreen>/touch7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e23dbc6-a81b-4000-8739-6f65d4c35a76"",
                    ""path"": ""<Touchscreen>/touch8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba84de2f-edab-4411-a0ed-01fd84c2b5df"",
                    ""path"": ""<Touchscreen>/touch9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7183bf2e-5f9c-4dee-9384-473f21bc302e"",
                    ""path"": ""<Touchscreen>/primaryTouch"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Primary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Buttons"",
            ""id"": ""d71b0628-bf93-4515-89fb-949e866edbf7"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""d146e2a8-c589-42e0-9f46-b64c90e96fb1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""bafc0b9b-d459-4983-b7f9-db32a4c1a2d4"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Deltas
        m_Deltas = asset.FindActionMap("Deltas", throwIfNotFound: true);
        // Positions
        m_Positions = asset.FindActionMap("Positions", throwIfNotFound: true);
        m_Positions_PointerVector2 = m_Positions.FindAction("PointerVector2", throwIfNotFound: true);
        m_Positions_PrimaryStartPosition = m_Positions.FindAction("PrimaryStartPosition", throwIfNotFound: true);
        m_Positions_InputDirection = m_Positions.FindAction("InputDirection", throwIfNotFound: true);
        // Touchs
        m_Touchs = asset.FindActionMap("Touchs", throwIfNotFound: true);
        m_Touchs_Primary = m_Touchs.FindAction("Primary", throwIfNotFound: true);
        m_Touchs__0 = m_Touchs.FindAction("0", throwIfNotFound: true);
        m_Touchs__1 = m_Touchs.FindAction("1", throwIfNotFound: true);
        m_Touchs__2 = m_Touchs.FindAction("2", throwIfNotFound: true);
        m_Touchs__3 = m_Touchs.FindAction("3", throwIfNotFound: true);
        m_Touchs__4 = m_Touchs.FindAction("4", throwIfNotFound: true);
        m_Touchs__5 = m_Touchs.FindAction("5", throwIfNotFound: true);
        m_Touchs__6 = m_Touchs.FindAction("6", throwIfNotFound: true);
        m_Touchs__7 = m_Touchs.FindAction("7", throwIfNotFound: true);
        m_Touchs__8 = m_Touchs.FindAction("8", throwIfNotFound: true);
        m_Touchs__9 = m_Touchs.FindAction("9", throwIfNotFound: true);
        // Buttons
        m_Buttons = asset.FindActionMap("Buttons", throwIfNotFound: true);
        m_Buttons_Newaction = m_Buttons.FindAction("New action", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Deltas
    private readonly InputActionMap m_Deltas;
    private List<IDeltasActions> m_DeltasActionsCallbackInterfaces = new List<IDeltasActions>();
    public struct DeltasActions
    {
        private @InputActions m_Wrapper;
        public DeltasActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputActionMap Get() { return m_Wrapper.m_Deltas; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DeltasActions set) { return set.Get(); }
        public void AddCallbacks(IDeltasActions instance)
        {
            if (instance == null || m_Wrapper.m_DeltasActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DeltasActionsCallbackInterfaces.Add(instance);
        }

        private void UnregisterCallbacks(IDeltasActions instance)
        {
        }

        public void RemoveCallbacks(IDeltasActions instance)
        {
            if (m_Wrapper.m_DeltasActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDeltasActions instance)
        {
            foreach (var item in m_Wrapper.m_DeltasActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DeltasActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DeltasActions @Deltas => new DeltasActions(this);

    // Positions
    private readonly InputActionMap m_Positions;
    private List<IPositionsActions> m_PositionsActionsCallbackInterfaces = new List<IPositionsActions>();
    private readonly InputAction m_Positions_PointerVector2;
    private readonly InputAction m_Positions_PrimaryStartPosition;
    private readonly InputAction m_Positions_InputDirection;
    public struct PositionsActions
    {
        private @InputActions m_Wrapper;
        public PositionsActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @PointerVector2 => m_Wrapper.m_Positions_PointerVector2;
        public InputAction @PrimaryStartPosition => m_Wrapper.m_Positions_PrimaryStartPosition;
        public InputAction @InputDirection => m_Wrapper.m_Positions_InputDirection;
        public InputActionMap Get() { return m_Wrapper.m_Positions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PositionsActions set) { return set.Get(); }
        public void AddCallbacks(IPositionsActions instance)
        {
            if (instance == null || m_Wrapper.m_PositionsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PositionsActionsCallbackInterfaces.Add(instance);
            @PointerVector2.started += instance.OnPointerVector2;
            @PointerVector2.performed += instance.OnPointerVector2;
            @PointerVector2.canceled += instance.OnPointerVector2;
            @PrimaryStartPosition.started += instance.OnPrimaryStartPosition;
            @PrimaryStartPosition.performed += instance.OnPrimaryStartPosition;
            @PrimaryStartPosition.canceled += instance.OnPrimaryStartPosition;
            @InputDirection.started += instance.OnInputDirection;
            @InputDirection.performed += instance.OnInputDirection;
            @InputDirection.canceled += instance.OnInputDirection;
        }

        private void UnregisterCallbacks(IPositionsActions instance)
        {
            @PointerVector2.started -= instance.OnPointerVector2;
            @PointerVector2.performed -= instance.OnPointerVector2;
            @PointerVector2.canceled -= instance.OnPointerVector2;
            @PrimaryStartPosition.started -= instance.OnPrimaryStartPosition;
            @PrimaryStartPosition.performed -= instance.OnPrimaryStartPosition;
            @PrimaryStartPosition.canceled -= instance.OnPrimaryStartPosition;
            @InputDirection.started -= instance.OnInputDirection;
            @InputDirection.performed -= instance.OnInputDirection;
            @InputDirection.canceled -= instance.OnInputDirection;
        }

        public void RemoveCallbacks(IPositionsActions instance)
        {
            if (m_Wrapper.m_PositionsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPositionsActions instance)
        {
            foreach (var item in m_Wrapper.m_PositionsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PositionsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PositionsActions @Positions => new PositionsActions(this);

    // Touchs
    private readonly InputActionMap m_Touchs;
    private List<ITouchsActions> m_TouchsActionsCallbackInterfaces = new List<ITouchsActions>();
    private readonly InputAction m_Touchs_Primary;
    private readonly InputAction m_Touchs__0;
    private readonly InputAction m_Touchs__1;
    private readonly InputAction m_Touchs__2;
    private readonly InputAction m_Touchs__3;
    private readonly InputAction m_Touchs__4;
    private readonly InputAction m_Touchs__5;
    private readonly InputAction m_Touchs__6;
    private readonly InputAction m_Touchs__7;
    private readonly InputAction m_Touchs__8;
    private readonly InputAction m_Touchs__9;
    public struct TouchsActions
    {
        private @InputActions m_Wrapper;
        public TouchsActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Primary => m_Wrapper.m_Touchs_Primary;
        public InputAction @_0 => m_Wrapper.m_Touchs__0;
        public InputAction @_1 => m_Wrapper.m_Touchs__1;
        public InputAction @_2 => m_Wrapper.m_Touchs__2;
        public InputAction @_3 => m_Wrapper.m_Touchs__3;
        public InputAction @_4 => m_Wrapper.m_Touchs__4;
        public InputAction @_5 => m_Wrapper.m_Touchs__5;
        public InputAction @_6 => m_Wrapper.m_Touchs__6;
        public InputAction @_7 => m_Wrapper.m_Touchs__7;
        public InputAction @_8 => m_Wrapper.m_Touchs__8;
        public InputAction @_9 => m_Wrapper.m_Touchs__9;
        public InputActionMap Get() { return m_Wrapper.m_Touchs; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TouchsActions set) { return set.Get(); }
        public void AddCallbacks(ITouchsActions instance)
        {
            if (instance == null || m_Wrapper.m_TouchsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_TouchsActionsCallbackInterfaces.Add(instance);
            @Primary.started += instance.OnPrimary;
            @Primary.performed += instance.OnPrimary;
            @Primary.canceled += instance.OnPrimary;
            @_0.started += instance.On_0;
            @_0.performed += instance.On_0;
            @_0.canceled += instance.On_0;
            @_1.started += instance.On_1;
            @_1.performed += instance.On_1;
            @_1.canceled += instance.On_1;
            @_2.started += instance.On_2;
            @_2.performed += instance.On_2;
            @_2.canceled += instance.On_2;
            @_3.started += instance.On_3;
            @_3.performed += instance.On_3;
            @_3.canceled += instance.On_3;
            @_4.started += instance.On_4;
            @_4.performed += instance.On_4;
            @_4.canceled += instance.On_4;
            @_5.started += instance.On_5;
            @_5.performed += instance.On_5;
            @_5.canceled += instance.On_5;
            @_6.started += instance.On_6;
            @_6.performed += instance.On_6;
            @_6.canceled += instance.On_6;
            @_7.started += instance.On_7;
            @_7.performed += instance.On_7;
            @_7.canceled += instance.On_7;
            @_8.started += instance.On_8;
            @_8.performed += instance.On_8;
            @_8.canceled += instance.On_8;
            @_9.started += instance.On_9;
            @_9.performed += instance.On_9;
            @_9.canceled += instance.On_9;
        }

        private void UnregisterCallbacks(ITouchsActions instance)
        {
            @Primary.started -= instance.OnPrimary;
            @Primary.performed -= instance.OnPrimary;
            @Primary.canceled -= instance.OnPrimary;
            @_0.started -= instance.On_0;
            @_0.performed -= instance.On_0;
            @_0.canceled -= instance.On_0;
            @_1.started -= instance.On_1;
            @_1.performed -= instance.On_1;
            @_1.canceled -= instance.On_1;
            @_2.started -= instance.On_2;
            @_2.performed -= instance.On_2;
            @_2.canceled -= instance.On_2;
            @_3.started -= instance.On_3;
            @_3.performed -= instance.On_3;
            @_3.canceled -= instance.On_3;
            @_4.started -= instance.On_4;
            @_4.performed -= instance.On_4;
            @_4.canceled -= instance.On_4;
            @_5.started -= instance.On_5;
            @_5.performed -= instance.On_5;
            @_5.canceled -= instance.On_5;
            @_6.started -= instance.On_6;
            @_6.performed -= instance.On_6;
            @_6.canceled -= instance.On_6;
            @_7.started -= instance.On_7;
            @_7.performed -= instance.On_7;
            @_7.canceled -= instance.On_7;
            @_8.started -= instance.On_8;
            @_8.performed -= instance.On_8;
            @_8.canceled -= instance.On_8;
            @_9.started -= instance.On_9;
            @_9.performed -= instance.On_9;
            @_9.canceled -= instance.On_9;
        }

        public void RemoveCallbacks(ITouchsActions instance)
        {
            if (m_Wrapper.m_TouchsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITouchsActions instance)
        {
            foreach (var item in m_Wrapper.m_TouchsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_TouchsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public TouchsActions @Touchs => new TouchsActions(this);

    // Buttons
    private readonly InputActionMap m_Buttons;
    private List<IButtonsActions> m_ButtonsActionsCallbackInterfaces = new List<IButtonsActions>();
    private readonly InputAction m_Buttons_Newaction;
    public struct ButtonsActions
    {
        private @InputActions m_Wrapper;
        public ButtonsActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_Buttons_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_Buttons; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ButtonsActions set) { return set.Get(); }
        public void AddCallbacks(IButtonsActions instance)
        {
            if (instance == null || m_Wrapper.m_ButtonsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ButtonsActionsCallbackInterfaces.Add(instance);
            @Newaction.started += instance.OnNewaction;
            @Newaction.performed += instance.OnNewaction;
            @Newaction.canceled += instance.OnNewaction;
        }

        private void UnregisterCallbacks(IButtonsActions instance)
        {
            @Newaction.started -= instance.OnNewaction;
            @Newaction.performed -= instance.OnNewaction;
            @Newaction.canceled -= instance.OnNewaction;
        }

        public void RemoveCallbacks(IButtonsActions instance)
        {
            if (m_Wrapper.m_ButtonsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IButtonsActions instance)
        {
            foreach (var item in m_Wrapper.m_ButtonsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ButtonsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ButtonsActions @Buttons => new ButtonsActions(this);
    public interface IDeltasActions
    {
    }
    public interface IPositionsActions
    {
        void OnPointerVector2(InputAction.CallbackContext context);
        void OnPrimaryStartPosition(InputAction.CallbackContext context);
        void OnInputDirection(InputAction.CallbackContext context);
    }
    public interface ITouchsActions
    {
        void OnPrimary(InputAction.CallbackContext context);
        void On_0(InputAction.CallbackContext context);
        void On_1(InputAction.CallbackContext context);
        void On_2(InputAction.CallbackContext context);
        void On_3(InputAction.CallbackContext context);
        void On_4(InputAction.CallbackContext context);
        void On_5(InputAction.CallbackContext context);
        void On_6(InputAction.CallbackContext context);
        void On_7(InputAction.CallbackContext context);
        void On_8(InputAction.CallbackContext context);
        void On_9(InputAction.CallbackContext context);
    }
    public interface IButtonsActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
}
